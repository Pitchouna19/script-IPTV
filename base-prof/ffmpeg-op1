#!/bin/bash

# $1 : type de source (vavoo ou xtream)
# $2 : stream_id ou URL
# $3 : name_id
# $4 : option_id (ex. : 460@360)
# $5 : bitrate_id (ex. : 1000@800 ou copy@copy)
# $6 : fps_id (ex. : 25@30 ou copy@copy)

echo "valeur type_id : $1"
echo "valeur stream_id : $2"
echo "valeur name_id : $3"
echo "valeur option_id : $4"
echo "valeur bitrate_id : $5"
echo "valeur fps_id : $6"

name=$3

# Définir l'URL d'entrée
if [[ "$1" == "vavoo" ]]; then
    input="http://127.0.0.1:5050/video/$2"
elif [[ "$1" == "xtream" ]]; then
    input="$2"
else
    echo "Erreur : Type de source non reconnu. Utilisez 'vavoo' ou 'xtream'."
    exit 1
fi

echo "URL d'entrée : $input"

# Séparer les formats, bitrates et fps avec '@' comme délimiteur
IFS='@' read -r -a formats <<< "$4"
IFS='@' read -r -a bitrates <<< "$5"
IFS='@' read -r -a fps_values <<< "$6"

# Vérifier que le nombre de formats correspond au nombre de bitrates et de FPS
if [[ "${#formats[@]}" -ne "${#bitrates[@]}" ]] || [[ "${#formats[@]}" -ne "${#fps_values[@]}" ]]; then
    echo "Erreur : Le nombre de formats, bitrates et FPS ne correspond pas."
    exit 1
fi

lancer_ffmpeg() {
    cmd=("ffmpeg" "-stream_loop" "-1" "-re" "-i" "$input")

    # Ajouter les options pour chaque format
    for i in "${!formats[@]}"; do
        format="${formats[$i]}"
        bitrate="${bitrates[$i]}"
        fps_value="${fps_values[$i]}"
        index_id="$i"

        # Option FPS (uniquement si différent de 'copy')
        fps_option=()
        if [[ "$fps_value" != "copy" ]]; then
            fps_option+=("-r" "$fps_value")
        fi

        # Option Bitrate (uniquement si différent de 'copy')
        bitrate_option=()
        if [[ "$bitrate" != "copy" ]]; then
            bitrate_option+=("-b:v" "${bitrate}k" "-maxrate" "${bitrate}k" "-bufsize" "$((bitrate * 2))k")
        fi

        # Génération de la commande selon le format
        if [[ "$format" == "copy" ]]; then
            # Gestion du mode copy avec ou sans modifications de bitrate/FPS
            if [[ "$bitrate" != "copy" ]] || [[ "$fps_value" != "copy" ]]; then
                # Ré-encodage avec changement de bitrate ou FPS
                cmd+=(
                    "${fps_option[@]}" "-c:v" "libx264" "${bitrate_option[@]}"
                    "-c:a" "aac" "-ar" "44100" "-b:a" "96k"
                    "-f" "flv" "rtmp://localhost/live/${name}_${index_id}_${format}"
                )
            else
                # Copie directe sans ré-encodage
                cmd+=(
                    "-c:v" "copy" "-c:a" "aac" "-ar" "44100" "-b:a" "96k"
                    "-f" "flv" "rtmp://localhost/live/${name}_${index_id}_${format}"
                )
            fi
        else
            # Ré-encodage avec changement de résolution
            cmd+=(
                "-vf" "scale=-2:$format" "${fps_option[@]}"
                "-c:v" "libx264" "-preset" "veryfast" "${bitrate_option[@]}"
                "-c:a" "aac" "-ar" "44100" "-b:a" "96k"
                "-f" "flv" "rtmp://localhost/live/${name}_${index_id}_${format}"
            )
        fi
    done

    # Afficher la commande pour le débogage
    echo "Commande FFmpeg : ${cmd[*]}"

    # Lancer la commande FFmpeg
    "${cmd[@]}"
}

# Lancer FFmpeg avec les options de sortie
lancer_ffmpeg
