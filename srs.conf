# main config for srs.
# @see full.conf for detail config.

listen              1935;
max_connections     1000;
#srs_log_tank        file;
#srs_log_file        ./objs/srs.log;
daemon              on;
http_api {
    enabled         on;
    listen          1985;
}
http_server {
    enabled         on;
    listen          8080;
    dir             ./objs/nginx/html;
}
rtc_server {
    enabled on;
    listen 8000; # UDP port
    # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#config-candidate
    candidate $CANDIDATE;
}
vhost __defaultVhost__ {
    hls {
        # Activer HLS
        enabled         on;

        # Durée de chaque fragment HLS (en secondes)
        # Réduire la durée des fragments pour améliorer la latence (moins de 10-15 secondes pour les flux en direct)
        hls_fragment    10;   # Par exemple, 4 secondes

        # Ratio pour la durée cible du fichier .m3u8
        hls_td_ratio    0.2;  # Valeur de 1.0 ou inférieure pour ajuster la longueur des segments .m3u8 de façon optimale

        # Ratio de dépassement pour les segments audio
        hls_aof_ratio   0.2;  # Réduire le ratio audio pour minimiser le décalage de lecture.

        # Durée de la fenêtre HLS (nombre de segments .ts dans le fichier .m3u8)
        # Réduire la fenêtre pour accélérer la propagation des segments récents.
        hls_window      3;    # Par exemple, une fenêtre de 3 segments pour une latence plus faible

        # Stratégie en cas d’erreur lors de la génération des segments HLS
        hls_on_error    continue;  # Continuer à générer des segments même en cas d'erreur

        # Chemin de sortie pour les fichiers HLS (.m3u8 et .ts)
        # Vous pouvez ajuster selon votre structure de répertoires ou votre serveur.
        hls_path        ./objs/nginx/html;

        # Nom du fichier .m3u8 avec variables pour personnalisation
        hls_m3u8_file   [app]/[stream].m3u8;

        # Nom des fichiers .ts avec variables pour personnalisation
        hls_ts_file     [app]/[stream]-[seq].ts;

        # Utilisation d’une approximation de timestamp pour les segments
        # La valeur `off` pour une précision optimale des timestamps
        hls_ts_floor    off;

        # Nettoyage des fichiers .ts expirés
        hls_cleanup     on;  # Toujours nettoyer les anciens fichiers pour économiser de l'espace disque

        # Timeout pour supprimer les fichiers HLS en cas d'inactivité de l'éditeur
        hls_dispose     60;  # Diminuer ce délai pour accélérer la suppression des fichiers inactifs

        # Taille maximale pour les notifications HLS
        hls_nb_notify   64;  # Réduire la taille des notifications pour réduire la latence de notification
    }

    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
    }
    rtc {
        enabled     on;
        # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtmp-to-rtc
        rtmp_to_rtc off;
        # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtc-to-rtmp
        rtc_to_rtmp off;
    }

    play{
        gop_cache_max_frames 2500;
    }

    http_hooks {
        enabled on;
        # Déclenchement du hook lors de la lecture d'un flux
        on_play http://127.0.0.1:9095/auth;
    }
}
